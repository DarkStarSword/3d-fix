//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float3 CamDir;
//   sampler2D DepthSampler;
//   sampler2D DiffuseLookupSampler;
//   float2 NearFar;
//   sampler2D NormalSampler;
//   float4 ScreenToTexCoord;
//   sampler2D ShadowMaskSampler;
//   sampler2D SpecularLookupSampler;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   CamDir                c0       1
//   NearFar               c1       1
//   ScreenToTexCoord      c2       1
//   DepthSampler          s0       1
//   NormalSampler         s1       1
//   ShadowMaskSampler     s2       1
//   DiffuseLookupSampler  s3       1
//   SpecularLookupSampler s4       1
//
//
// Default values:
//
//   CamDir
//     c0   = { 0, 0, 0, 0 };
//
//   NearFar
//     c1   = { 0, 0, 0, 0 };
//
//   ScreenToTexCoord
//     c2   = { 0, 0, 0, 0 };
//

// Lights - torches on walls

    ps_3_0
// Helix sampler
def c200, 0.275, 0.25, 0.0625, 0
def c201, 0, -0, 0, 0
dcl_2d s13
    def c3, 0.5, 0.99609375, 0.124511719, 0.000244140625
    def c4, 2, -1, 3, 1
    dcl_texcoord v0
    dcl_texcoord1 v1.xyz
    dcl_texcoord2_pp v2
    dcl vPos.xy
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    mad r0.xy, vPos, c2, c2.zwzw
    texld r1, r0, s0					// sample depth
rcp r28.x, r1.x
    mul r0.z, r1.x, c1.y

// Use the new PixelShader prime directive
// pos.x += sep * (1 - c * conv / depth)
mov r30, v1.xyz
texldl r29, c200.z, s13
mul r29.w, c200.x, r28.x

// x: fix S with c=0.2, fixes N with c=-0.2
// z: fix E with c=0.2, fixes W with c=-0.2
// Extract xz vector from camera vector (c0)
mov r26, c200.w
mov r26.xyz, c0.xyz
nrm r27, r26
mul r27.xyz, r29.www, r27.xyz		// * scaled depth
//mul r27.xz, r27.xz, r29.yy		// * conv

// apply stereo correction
mad r30.x, r29.x, -r27.z, r30.x
mad r30.z, r29.x, r27.x, r30.z
//mad r30.y, r29.x, r27.y, r30.y	// not good: shifts light up/down dependent on view angle

// TODO: small jump to 2D remaining

    nrm_pp r1.xyz, r30//v1
    dp3 r0.w, c0, r1
    rcp r0.w, r0.w
    mul r0.z, r0.w, r0.z
    mad_pp r2.xyz, r1, -r0.z, v2
    dp3_pp r0.z, r2, r2
    rsq_pp r0.z, r0.z
    mad_pp r3.xyz, r2, r0.z, -r1
    mul_pp r2.xyz, r0.z, r2
    rcp_pp r0.z, r0.z
    mul_sat_pp r0.z, r0.z, v2.w
    nrm_pp r4.xyz, r3
    texld_pp r3, r0, s1
    texld_pp r5, r0, s2					// sample shadow (light)
    mad_pp r0.xyw, r3.xyzz, c4.x, c4.y
    mov_pp r3.y, r3.w
    nrm_pp r6.xyz, r0.xyww
    dp3_sat_pp r4.z, r4, r6
    dp3_pp r0.y, r2, -r1
    dp3_pp r0.x, r2, r6
    dp3_pp r1.w, -r1, r6
    mad_pp r4.xy, r0, c3.x, c3.x
    mul_pp r0.y, r5.y, c3.y
    mad r2.xyz, r4, c3.z, r0.y
    add_pp r1.xyz, r2, c3.w
    texld_pp r2, r1.ywzw, s3		// diffuse sampler - partial broken, darker
    mul_pp r0.x, r0.x, r2.w
    texld_pp r2, r1.xwzw, s3		// broken, black stripe below
    texld_pp r4, r1.xwzw, s4		// specular sampler, nothing
    mov_pp r3.x, r1.z
    texld_pp r1, r3, s4				// nothing
    mul_pp r1.w, r4.y, r1.x
    max_pp r1.xyz, r0.x, r2
    mul r1, r1, v0					// no light, broken shadow
    mul_pp r0.x, r0.z, r0.z
    mul_pp r0.y, r0.x, c4.z
    dp2add_pp r0.x, r0.x, r0.z, -r0.y
    add_pp r0.x, r0.x, c4.w
    mul_pp r0.x, r5.x, r0.x
    mul_pp oC0, r0.x, r1
//mov oC0, c201.x					// disables lights

// approximately 50 instruction slots used (7 texture, 43 arithmetic)
