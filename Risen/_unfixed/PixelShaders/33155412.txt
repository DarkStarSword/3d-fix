//
// Generated by Microsoft (R) D3DX9 Shader Compiler 9.11.519.0000
//
// Parameters:
//
//   sampler2D DepthSampler;
//   float DizzerKernelSize;
//   sampler2D DizzerSampler;
//   sampler2D ShadowSampler;
//
//
// Registers:
//
//   Name             Reg   Size
//   ---------------- ----- ----
//   DizzerKernelSize c0       1
//   DepthSampler     s0       1
//   DizzerSampler    s1       1
//   ShadowSampler    s2       1
//
//
// Default values:
//
//   DizzerKernelSize
//     c0   = { 0.01, 0, 0, 0 };
//

// Point light shadow

// shadow is good now, borders not

    ps_3_0
dcl_2d s13
def c200, -1850, 0.0005, 0.0625, 1.225
def c201, 2500, 20, 0.5, 0.25
    def c1, 0.125, 1, 0, 0
    def c2, 2, -1, 1, 0
    dcl_color v0			// light without shadow
    dcl_texcoord v1			// dark / no light, depth coordinate
    dcl_texcoord1 v2.xyw	// shadow
    dcl_texcoord2 v3
    dcl_texcoord3 v4		// square
    dcl_texcoord4 v5
    dcl_texcoord5 v6		// square
    dcl_texcoord6 v7.xy		// shadow
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    
// moves shadow, only in bottom square
//mov r21, v2.xyw
//add r21.x, r21.x, c200.x
    
    //rcp r0.w, v2.w
    //mul r1.xy, r0.w, v2
    texldp r0, v1, s0		// get depth

// dont work    
// Use the new PixelShader prime directive ?
// pos.x += sep * (1 - c * conv / depth)
mov r30, v2.xyw
texldl r29, c200.z, s13
mul r29.x, r29.x, r29.y
//mad r30.x, r29.x, c200.w, r30.x

//mul r27, r0.x, r0.x
//rcp r28.x, r27.x
//mul r29.w, c200.y, r28.x
//mul r29.w, r29.w, r29.y
//add r29.w, r29.w, c200.x
//mad r30.x, r29.x, r29.w, r30.x   

//add r30.x, r30.x, c200.w  
rcp r0.w, r30.w //v2.w
mul r1.xy, r0.w, r30 //v2
    mul r2.xy, r1, r0.x
    
    

    
    // some kind of stretching
mov r23, v4
add r23.x, r23.x, -c200.x
//mul r1, r2.y, r23    
    mul r1, r2.y, v4
    
// moves shadow, upper left square ? front
// shadow streched
mov r22, v3
add r22.x, r22.x, -c200.x
//mad r1, r2.x, r22, r1  
    mad r1, r2.x, v3, r1

// v5 moves shadow
mov r24, v5
//add r24.x, r24.x, -c200.x

texldl r30, c200.z, s13
//add r30.w, r24.w, -r30.y
//mul r30.w, r30.w, c201.x
//mad r24.x, r30.x, r30.w, r24.x
mad r24.x, c201.x, r30.x, r24.x

mad r0, r0.x, r24, r1

//    mad r0, r0.x, v5, r1
    add r0, r0, v6
    rcp r0.w, r0.w
    mul r0.z, r0.z, r0.w
    
    // without this block: no shadows
    texld r1, v7, s1		// strange line
    mad r1, c2.x, r1, c2.y
    mad r2.zw, r0.z, c2, c2.xywz
    mul_pp r1, r1, c0.x
    mov r4.zw, r2
    mad r4.xy, r0, r0.w, r1.yzzw
    
texld r30, c200.z, s13
mul r30.x, r30.x, c200.x
//add r4.w, r4.w, r30.x
    
//add r4.x, r4.x, c200.x		// x brighter
//add r4.y, r4.y, c200.x			// y brighter
//add r4.z, r4.z, c200.x		// breaks it
//add r4.w, r4.w, c200.x			// breaks it

// r4 is shadow coord
    
    // without shadow layer - bright bottom square, darker side squares
    texldp_pp r3, r4, s2	// sample shadow
    mov r3.zw, r4
    mad r2.xy, r0, r0.w, r1.xzzw
    texldp_pp r2, r2, s2		// shadow
    add_pp r0.z, r3.x, r2.x
    mad r3.xy, r0, r0.w, r1.ywzw
    texldp_pp r2, r3, s2		// weak shadow
    add_pp r0.z, r0.z, r2.x
    mad r3.xy, r0, r0.w, r1.zwzw
    texldp_pp r2, r3, s2		// weak shadow
    add_pp r0.z, r0.z, r2.x
    mad r3.xy, r0, r0.w, r1.zxzw
    texldp_pp r2, r3, s2		// weak shadow
    add_pp r0.z, r0.z, r2.x
    mad r3.xy, r0, r0.w, r1.wxzw
    texldp_pp r2, r3, s2		// very weak shadow
    mov r2.zw, r3
    add_pp r3.w, r0.z, r2.x
    mad r2.xy, r0, r0.w, r1.wyzw
    mad r0.xy, r0, r0.w, r1.wzzw
    texldp_pp r1, r2, s2		// nothing
    mov r0.zw, r2
    add_pp r1.w, r3.w, r1.x
    texldp_pp r0, r0, s2			// inverse shadow, step on square border
    add_pp r0.w, r1.w, r0.x
    mad_pp r0.w, r0.w, -c1.x, c1.y
    max oC0, r0.w, v0	// r0.w: shadow
    
//mov oC0, v2
mov r30, v3
//add r30, r30, v3
//mul r30, r30, c201.y
//mov oC0, r30
mov oC0, v0
// approximately 43 instruction slots used (10 texture, 33 arithmetic)
